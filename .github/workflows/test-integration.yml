name: Integration

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

env:
  GITHUB_ACTIONS: true

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster: [ "opendistro" , "opensearch" ]
    steps:
      - uses: actions/checkout@v2
        with: { fetch-depth: 1 }
      - uses: actions/setup-go@v2.1.3
        with: { go-version: '1.x' }
      - run: go version
      - name: Increase system limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Launch ${{ matrix.cluster }} cluster
        run: |
          make cluster.clean cluster.${{ matrix.cluster }}.build cluster.${{ matrix.cluster }}.start
      - run: make test-integ race=true
      - uses: codecov/codecov-action@v1
        with:
          file: tmp/integration-client.cov
          flags: integration

  examples:
    name: Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster: [ "opendistro" , "opensearch" ]
    steps:
      - uses: actions/checkout@v2
        with: { fetch-depth: 1 }
      - uses: actions/setup-go@v2.1.3
        with: { go-version: '1.x' }
      - run: go version
      - name: Increase system limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Launch ${{ matrix.cluster }} cluster
        run: |
          make cluster.clean cluster.${{ matrix.cluster }}.build cluster.${{ matrix.cluster }}.start
      - name: Run setup
        run: |
          cd _examples/encoding && make setup
        env:
          GOBIN: ${{ env.GOROOT }}/bin
      - run: make test-examples
